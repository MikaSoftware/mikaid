"""
Django settings for mikaid project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import environ

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))



'''
django-environ
https://github.com/joke2k/django-environ
'''
root = environ.Path(__file__) - 3 # three folder back (/a/b/c/ - 3 = /)
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
environ.Env.read_env() # reading .env file

SITE_ROOT = root()



'''
django
https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/
'''

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY') # Raises ImproperlyConfigured exception if SECRET_KEY not in os.environ

# SECURITY WARNING: Do not run true in production environment.
DEBUG = env('DEBUG', default=False)
TEMPLATE_DEBUG = env('DEBUG', default=False)

ALLOWED_HOSTS = ['*']

SITE_ID = 1
ADMIN_ENABLED = False

INSTALLED_APPS = [
    # Django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Extra Django Apps
    # 'django.contrib.sites',
    # 'django.contrib.sitemaps',
    'django.contrib.postgres',   # Postgres full-text search: https://docs.djangoproject.com/en/1.10/ref/contrib/postgres/search/
    'django.contrib.gis',        # Geo-Django: https://docs.djangoproject.com/en/dev/ref/contrib/gis/
    'django.contrib.humanize',   # Humanize: https://docs.djangoproject.com/en/dev/ref/contrib/humanize/

    # Third Party Apps
    'corsheaders',
    'oauth2_provider',
    'rest_framework',

    # Our Apps
    'foundation',
    'api',
]

AUTH_USER_MODEL = 'foundation.User'

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',                  # Third Party
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.BrokenLinkEmailsMiddleware',    # Extra Django App
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',              # Extra Django App
    'oauth2_provider.middleware.OAuth2TokenMiddleware',       # Third Party
]

ROOT_URLCONF = 'mikaid.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR + '/templates/',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.i18n',      # Extra Django App
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mikaid.wsgi.application'



'''
Database
https://docs.djangoproject.com/en/2.1/ref/settings/#databases
'''

DATABASES = {
    "default": {
        'CONN_MAX_AGE': 0,
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        "NAME": env("DB_NAME"),
        "USER": env("DB_USER"),
        "PASSWORD": env("DB_PASSWORD"), # YOU MUST CHANGE IN PROD!
        "HOST": env("DB_HOST"),
        "PORT": env("DB_PORT"),
    }
}



'''
Password validation
https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators
'''

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]



'''
Custom authentication
https://docs.djangoproject.com/en/dev/topics/auth/customizing/
'''

AUTHENTICATION_BACKENDS = (
    'oauth2_provider.backends.OAuth2Backend',
    'foundation.backends.MikaIDBackend',
    'django.contrib.auth.backends.ModelBackend',
)



'''
Internationalization
https://docs.djangoproject.com/en/2.1/topics/i18n/
'''

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

ugettext = lambda s: s
LANGUAGES = (
    ('en', ugettext('English')),
#    ('fr', ugettext('French')),
#    ('es', ugettext('Spanish')),
)

LOCALE_PATHS = (
    os.path.join(BASE_DIR, "locale"),
)


'''
Static files (CSS, JavaScript, Images)
https://docs.djangoproject.com/en/2.1/howto/static-files/
'''

STATIC_URL = '/static/'


'''
django-cors-headers
https://github.com/ottoyiu/django-cors-headers
'''

CORS_ORIGIN_ALLOW_ALL=True



'''
Django-REST-Framework
https://github.com/encode/django-rest-framework
'''

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        'rest_framework.authentication.SessionAuthentication', # To keep the Browsable API
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    # 'DEFAULT_FILTER_BACKENDS': (
    #     'django_filters.rest_framework.DjangoFilterBackend',
    # ),
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        # 'rest_framework.renderers.BrowsableAPIRenderer'  # Not to be used in prod.
    ],
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        # 'rest_framework.parsers.FormParser',
        # 'rest_framework.parsers.MultiPartParser',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 100
}



'''
django-oauth-toolkit
https://github.com/jazzband/django-oauth-toolkit
'''

OAUTH2_PROVIDER = {
    'SCOPES': {
        'read': 'Read scope',
        'write': 'Write scope',
        'introspection': 'Access to introspect resource'
    }
}



'''
mikaid-django
https://github.com/mikasoftware/mikaid
'''
MIKAID_APP_HTTP_PROTOCOL = env("MIKAID_APP_HTTP_PROTOCOL")
MIKAID_APP_HTTP_DOMAIN = env("MIKAID_APP_HTTP_DOMAIN")
MIKAID_RESOURCE_SERVER_NAME = env("MIKAID_RESOURCE_SERVER_NAME")
MIKAID_RESOURCE_SERVER_INTROSPECTION_URL = env("MIKAID_RESOURCE_SERVER_INTROSPECTION_URL")
MIKAID_RESOURCE_SERVER_INTROSPECTION_TOKEN = env("MIKAID_RESOURCE_SERVER_INTROSPECTION_TOKEN")
